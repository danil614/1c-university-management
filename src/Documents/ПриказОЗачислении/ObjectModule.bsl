Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	ОбработкаЗаполненияПриказаВызовСервера.ПроверитьКорректноеКоличествоСтаростВГруппе(Отказ, Ссылка, МоментВремени(),
		УчебнаяГруппа, Курс, Студенты, ЭтотОбъект);
	ОбработкаЗаполненияПриказаВызовСервера.ПроверитьСтудентНеУчится(Отказ, Студенты, Ссылка, МоментВремени(),
		ЭтотОбъект);

	Движения.Учащиеся.Записывать = Истина;
	// Регистр Учащиеся
	Для Каждого СтрокаСтудент Из Студенты Цикл
		Движение = Движения.Учащиеся.Добавить();
		Движение.Период = Дата;
		Движение.Студент = СтрокаСтудент.Студент;

		Движение.Факультет = Факультет;
		Движение.УчебнаяГруппа = УчебнаяГруппа;
		Движение.Курс = Курс;

		Движение.ЯвляетсяСтаростой = СтрокаСтудент.ЯвляетсяСтаростой;
		Движение.ОбучениеНаБюджетнойОснове = СтрокаСтудент.ОбучениеНаБюджетнойОснове;
	КонецЦикла;

	Движения.Взаиморасчеты.Записывать = Истина;
	// Регистр Взаиморасчеты
	Для Каждого СтрокаСтудент Из Студенты Цикл
		Если СтрокаСтудент.СуммаОбучения > 0 Тогда
			Движение = Движения.Взаиморасчеты.Добавить();
			Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
			Движение.Период = Дата;
			Движение.Студент = СтрокаСтудент.Студент;
			Движение.Сумма = СтрокаСтудент.СуммаОбучения;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	ОбработкаЗаполненияПриказаВызовСервера.ПроверитьТабличнуюЧастьСтуденты(Отказ, Студенты, ЭтотОбъект);
	ОбработкаЗаполненияПриказаВызовСервера.ПроверитьКорректностьУчебногоКурса(Отказ, Курс, "Курс", ЭтотОбъект);
КонецПроцедуры